{"version":3,"file":"component---src-templates-labels-tsx-34687c66d0846e79559c.js","mappings":"+HAgCA,IApBwC,SAACA,GACvC,IAAMC,EAAOD,EAAMC,KAAKC,mBAAmBC,MACrCC,EAAOJ,EAAMK,YAAYD,KAE/B,OACEE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACZN,EAAKO,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,KACX,OACEH,EAAAA,cAAAA,MAAAA,CAAKI,IAAKD,EAAKE,OAAQJ,UAAU,eAC/BD,EAAAA,cAACM,EAAAA,EAAD,CAAWD,OAAQF,EAAKE,OAAQE,IAAKT,IACrCE,EAAAA,cAACQ,EAAAA,KAAD,CAAMP,UAAU,QAAQQ,GAAE,WAAaN,EAAKE,QACzCF,EAAKO,c,iECiBpB,IA1BsC,SAAChB,GACrC,IAEIiB,EAFEC,GAAUC,EAAAA,EAAAA,KAGhB,OAAQD,EAAQE,MACd,IAAK,SACHH,EAAK,sBAAyBC,EAAQG,aAAjC,IAAiDH,EAAQI,YAAzD,WAA+EtB,EAAMW,OAC1F,MACF,IAAK,eACHM,EAAK,sBAAyBC,EAAQK,UAAjC,IAA8CL,EAAQM,SAAtD,gBAA8ExB,EAAMW,OACzF,MACF,QACEM,EAAK,sBAAyBC,EAAQO,MAAjC,IAA0CP,EAAQQ,KAAlD,gBAAsE1B,EAAMW,OAGrF,OACEL,EAAAA,cAAAA,IAAAA,CACEC,WAAWoB,EAAAA,EAAAA,GAAK,oBAAqB3B,EAAMO,WAC3CqB,KAAMX,EACNY,OAAO,UAEN7B,EAAMa,KAAMiB,EAAAA,EAAAA,IAAU9B,EAAMW,OAAQX,EAAMa,KAA1Cb,IAAqDA,EAAMW,U,uHC1BnD,SAASoB,EAAa/B,GACnC,IAIIgC,EAJEC,EAAajC,EAAMK,YAAY6B,OACrC,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAUR,OALEJ,EADe,WAJjB,EAAkBK,SAKAD,EAAN,aAA0BE,EAAAA,EAAAA,IAAOL,EAAWM,MAEtCH,EAAN,0BAAuCE,EAAAA,EAAAA,IAAOL,EAAWM,MAAzD,IAIVjC,EAAAA,cAACkC,EAAAA,EAAD,CAAQjC,UAAU,cAAcS,MAAUiB,EAAWM,KAAhB,aACnCjC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,IAAAA,CACEsB,KAAMI,EACNzB,UAAU,cACVkC,MAAO,CAAEC,WAAW,IAAKT,EAAWU,OACpCd,OAAO,UAENI,EAAWM,MAGbN,EAAWW,aACVtC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cAAc0B,EAAWW,aAG1CtC,EAAAA,cAACuC,EAAAA,EAAD,CAAY5C,KAAMD,EAAMC,KAAMI,YAAaL,EAAMK","sources":["webpack://gg/./src/components/issues_list/index.tsx","webpack://gg/./src/components/issues_num/index.tsx","webpack://gg/./src/templates/labels.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { Link } from 'gatsby';\n\nimport IssuesNum from '@comps/issues_num';\n\nimport './index.scss';\n\ninterface IssuesListProps {\n  data: any;\n  pageContext: any;\n}\n\nconst IssuesList: FC<IssuesListProps> = (props) => {\n  const data = props.data.allDiscussionsJson.nodes;\n  const nlen = props.pageContext.nlen;\n\n  return (\n    <div className=\"issues-list\">\n      {data.map(({ node }: any) => {\n        return (\n          <div key={node.number} className=\"issues-item\">\n            <IssuesNum number={node.number} len={nlen} />\n            <Link className=\"title\" to={`/issues/${node.number}`}>\n              {node.title}\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default IssuesList;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\n\nimport { fmtIssues } from '@utils/tools';\nimport useRgd from '@hooks/useRgd';\n\nimport './index.scss';\n\ninterface IssuesNumProps {\n  number: number;\n  len?: number;\n  className?: string;\n}\n\nconst IssuesNum: FC<IssuesNumProps> = (props) => {\n  const rgdData = useRgd();\n\n  let _link;\n  switch (rgdData.type) {\n    case 'issues':\n      _link = `https://github.com/${rgdData.issues_owner}/${rgdData.issues_repo}/issues/${props.number}`;\n      break;\n    case 'discussions2':\n      _link = `https://github.com/${rgdData.dis_owner}/${rgdData.dis_repo}/discussions/${props.number}`;\n      break;\n    default:\n      _link = `https://github.com/${rgdData.owner}/${rgdData.repo}/discussions/${props.number}`;\n  }\n\n  return (\n    <a\n      className={clsx('number issues-num', props.className)}\n      href={_link}\n      target=\"_blank\"\n    >\n      {props.len ? fmtIssues(props.number, props.len) : `#${props.number}`}\n    </a>\n  );\n};\n\nexport default IssuesNum;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '@layouts/base';\nimport useRepoLink from '@hooks/useRepoLink';\nimport IssuesList from '@comps/issues_list';\nimport { fmtURI } from '@utils/tools';\nimport '@styles/labels.scss';\n\nexport default function BlogCategory(props: any) {\n  const labelsInfo = props.pageContext.labels;\n  const { repoLink, repoType } = useRepoLink();\n  // issues label: https://github.com/lencx/gg/issues?q=label:\n  // discussions label: https://github.com/lencx/gg/discussions?discussions_q=label:\n  let labelsLink;\n  if (repoType === 'issues') {\n    labelsLink = `${repoLink}?q=label:${fmtURI(labelsInfo.name)}`;\n  } else {\n    labelsLink = `${repoLink}?discussions_q=label:\"${fmtURI(labelsInfo.name)}\"`;\n  }\n\n  return (\n    <Layout className=\"labels-page\" title={`${labelsInfo.name} | Labels`}>\n      <div className=\"markdown-body\">\n        <a\n          href={labelsLink}\n          className=\"labels-head\"\n          style={{ background: `#${labelsInfo.color}` }}\n          target=\"_blank\"\n        >\n          {labelsInfo.name}\n        </a>\n\n        {labelsInfo.description && (\n          <div className=\"label-desc\">{labelsInfo.description}</div>\n        )}\n\n        <IssuesList data={props.data} pageContext={props.pageContext} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query GGLabelsQuery($name: String!) {\n    allDiscussionsJson(\n      filter: {\n        node: {\n          labels: { edges: { elemMatch: { node: { name: { eq: $name } } } } }\n        }\n      }\n    ) {\n      nodes {\n        node {\n          title\n          number\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","data","allDiscussionsJson","nodes","nlen","pageContext","React","className","map","node","key","number","IssuesNum","len","Link","to","title","_link","rgdData","useRgd","type","issues_owner","issues_repo","dis_owner","dis_repo","owner","repo","clsx","href","target","fmtIssues","BlogCategory","labelsLink","labelsInfo","labels","useRepoLink","repoLink","repoType","fmtURI","name","Layout","style","background","color","description","IssuesList"],"sourceRoot":""}