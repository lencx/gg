{"version":3,"file":"component---src-templates-category-tsx-51cbca430cb5370d0159.js","mappings":"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","sources":["webpack://gg/./src/utils/emoji.ts","webpack://gg/./src/components/category/index.tsx","webpack://gg/./src/components/issues_list/index.tsx","webpack://gg/./src/components/issues_num/index.tsx","webpack://gg/./src/templates/category.tsx"],"sourcesContent":["// https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md\n\nconst emojiMap: Record<string, string> = {\n  zap: '⚡',\n  gear: '⚙️',\n  beer: '🍺',\n  star: '⭐',\n  fire: '🔥',\n  tada: '🎉',\n  ninja: '🥷',\n  mega: '📣',\n  crab: '🦀',\n  rocket: '🚀',\n  warning: '⚠️',\n  unicorn: '🦄',\n  lobster: '🦞',\n  cyclone: '🌀',\n  rainbow: '🌈',\n  computer: '💻',\n  nail_care: '💅',\n  sunglasses: '😎',\n  see_no_evil: '🙈',\n  crystal_ball: '🔮',\n  monocle_face: '🧐',\n  speech_balloon: '💬',\n  exploding_head: '🤯',\n  hammer_and_wrench: '🛠️',\n  globe_with_meridians: '🌐',\n  page_facing_up: '📄',\n  thinking: '🤔',\n  sparkling_heart: '💖',\n  boom: '💥',\n  collision: '💥',\n  anger: '💢',\n  book: '📖',\n  open_book: '📖',\n  books: '📚',\n  game_die: '🎲'\n}\n\nexport default (emoji: string): string => emojiMap[emoji.slice(1, -1)] || '';\n\n\n// -----------------------------------------\n// THUMBS_UP\n// Represents the :+1: emoji.\n\n// THUMBS_DOWN\n// Represents the :-1: emoji.\n\n// LAUGH\n// Represents the :laugh: emoji.\n\n// HOORAY\n// Represents the :hooray: emoji.\n\n// CONFUSED\n// Represents the :confused: emoji.\n\n// HEART\n// Represents the :heart: emoji.\n\n// ROCKET\n// Represents the :rocket: emoji.\n\n// EYES\n// Represents the :eyes: emoji.","import React, { FC } from 'react';\nimport { Link, navigate } from 'gatsby';\n\nimport getEmoji from '@utils/emoji';\nimport { fmtURI } from '@utils/tools';\n\nimport './index.scss';\n\ninterface CategoryProps {\n  data: any;\n  go?: string;\n}\n\nconst Category: FC<CategoryProps> = ({ data, go }) => {\n  if (!(data && data?.name)) return null;\n  return (\n    <Link\n      className=\"gg-category\"\n      to={go ? go : `/category/${fmtURI(data.name, true)}`}\n      target={go ? '_blank' : '_self'}\n    >\n      {getEmoji(data.emoji)} {data.name}\n    </Link>\n  );\n};\n\nexport default Category;\n","import React, { FC } from 'react';\nimport { Link } from 'gatsby';\n\nimport IssuesNum from '@comps/issues_num';\n\nimport './index.scss';\n\ninterface IssuesListProps {\n  data: any;\n  pageContext: any;\n}\n\nconst IssuesList: FC<IssuesListProps> = (props) => {\n  const data = props.data.allDiscussionsJson.nodes;\n  const nlen = props.pageContext.nlen;\n\n  return (\n    <div className=\"issues-list\">\n      {data.map(({ node }: any) => {\n        return (\n          <div key={node.number} className=\"issues-item\">\n            <IssuesNum number={node.number} len={nlen} />\n            <Link className=\"title\" to={`/issues/${node.number}`}>\n              {node.title}\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default IssuesList;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\n\nimport { fmtIssues } from '@utils/tools';\nimport useRgd from '@hooks/useRgd';\n\nimport './index.scss';\n\ninterface IssuesNumProps {\n  number: number;\n  len?: number;\n  className?: string;\n}\n\nconst IssuesNum: FC<IssuesNumProps> = (props) => {\n  const rgdData = useRgd();\n\n  let _link;\n  switch (rgdData.type) {\n    case 'issues':\n      _link = `https://github.com/${rgdData.issues_owner}/${rgdData.issues_repo}/issues/${props.number}`;\n      break;\n    case 'discussions2':\n      _link = `https://github.com/${rgdData.dis_owner}/${rgdData.dis_repo}/discussions/${props.number}`;\n      break;\n    default:\n      _link = `https://github.com/${rgdData.owner}/${rgdData.repo}/discussions/${props.number}`;\n  }\n\n  return (\n    <a\n      className={clsx('number issues-num', props.className)}\n      href={_link}\n      target=\"_blank\"\n    >\n      {props.len ? fmtIssues(props.number, props.len) : `#${props.number}`}\n    </a>\n  );\n};\n\nexport default IssuesNum;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '@layouts/base';\nimport useRgd from '@hooks/useRgd';\nimport IssuesList from '@comps/issues_list';\nimport Category from '@comps/category';\nimport { fmtURI } from '@utils/tools';\nimport '@styles/category.scss';\n\nexport default function BlogCategory(props: any) {\n  const { repo } = useRgd();\n  const categoryInfo = props.pageContext.category;\n  const categoriesLink = `${repo}/discussions/categories/${fmtURI(\n    categoryInfo.name,\n    true\n  )}`;\n\n  return (\n    <Layout className=\"category-page\" title={`${categoryInfo.name} | Category`}>\n      <div className=\"markdown-body\">\n        <div className=\"category-head\" title={categoriesLink}>\n          <Category data={categoryInfo} go={categoriesLink} />\n          <span className=\"desc\">{categoryInfo.description}</span>\n        </div>\n\n        <IssuesList data={props.data} pageContext={props.pageContext} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query GGCategoryQuery($name: String!) {\n    allDiscussionsJson(\n      filter: { node: { category: { name: { eq: $name } } } }\n    ) {\n      nodes {\n        node {\n          title\n          number\n        }\n      }\n    }\n  }\n`;\n"],"names":["emojiMap","zap","gear","beer","star","fire","tada","ninja","mega","crab","rocket","warning","unicorn","lobster","cyclone","rainbow","computer","nail_care","sunglasses","see_no_evil","crystal_ball","monocle_face","speech_balloon","exploding_head","hammer_and_wrench","globe_with_meridians","page_facing_up","thinking","sparkling_heart","boom","collision","anger","book","open_book","books","game_die","data","go","name","React","Link","className","to","fmtURI","target","emoji","slice","getEmoji","props","allDiscussionsJson","nodes","nlen","pageContext","map","node","key","number","IssuesNum","len","title","_link","rgdData","useRgd","type","issues_owner","issues_repo","dis_owner","dis_repo","owner","repo","clsx","href","fmtIssues","BlogCategory","categoryInfo","category","categoriesLink","Layout","Category","description","IssuesList"],"sourceRoot":""}